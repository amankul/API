<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name="MAP API TEST SUITE ">
    <parameter name="env" value="STAGE"/>
    <parameter name="venueId" value="6807a0d1-e502-4977-92f0-e0b28015f475"/>
    <parameter name="campusId" value="3959"/>
    <parameter name="buildingId" value="5542"/>
    <parameter name="floorId" value="15242"/>
    <parameter name="resourceId" value="4970"/>
    <parameter name="pointId" value="4281308"/>
    <parameter name="poitypeId" value="54"/>
    <parameter name="routeId" value="6768796"/>
    <parameter name="segmentId" value="93928"/>
    <parameter name="orgId" value="139"/>
    <parameter name="clientId" value="632"/>
    <parameter name="clientId_android_access_key" value="a9703774190655e3b6a3e82f5c3fa1eb2b9b8e20"/>
    <parameter name="clientId_android_signature_key" value="9a5941cdbf1099e2db20ea59eb0d131c09857316"/>
    <parameter name="postVenueRequestBodyPath" value="src/test/resources/map_sp_jsons/postVenue.json"/>
    <parameter name="putVenueRequestBodyPath" value="src/test/resources/map_sp_jsons/putVenue.json"/>
    <parameter name="postCampusRequestBodyPath" value="src/test/resources/map_sp_jsons/postCampus.json"/>
    <parameter name="putCampusRequestBodyPath" value="src/test/resources/map_sp_jsons/putCampus.json"/>
    <parameter name="postBuildingRequestBodyPath" value="src/test/resources/map_sp_jsons/postBuilding.json"/>
    <parameter name="putBuildingRequestBodyPath" value="src/test/resources/map_sp_jsons/putBuilding.json"/>
    <parameter name="postFloorRequestBodyPath" value="src/test/resources/map_sp_jsons/postFloor.json"/>
    <parameter name="putFloorRequestBodyPath" value="src/test/resources/map_sp_jsons/putFloor.json"/>
    <parameter name="postResourceRequestBodyPath" value="src/test/resources/map_sp_jsons/postResource.json"/>
    <parameter name="putResourceRequestBodyPath" value="src/test/resources/map_sp_jsons/putResource.json"/>
    <parameter name="postPointRequestBodyPath" value="src/test/resources/map_sp_jsons/postPoint.json"/>
    <parameter name="putPointRequestBodyPath" value="src/test/resources/map_sp_jsons/putPoint.json"/>
    <parameter name="postRouteRequestBodyPath" value="src/test/resources/map_sp_jsons/postRoute.json"/>
    <parameter name="putRouteRequestBodyPath" value="src/test/resources/map_sp_jsons/putRoute.json"/>
    <parameter name="resetRouteRequestBodyPath" value="src/test/resources/map_sp_jsons/resetRoute.json"/>
    <parameter name="postSegmentRequestBodyPath" value="src/test/resources/map_sp_jsons/postSegment.json"/>
    <parameter name="putSegmentRequestBodyPath" value="src/test/resources/map_sp_jsons/putSegment.json"/>


    <test name="Get Venue">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Get_Venue"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="Get Venue - Invalid Venue Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Get_Invalid_Venue"/>
                </methods>
            </class>
        </classes>
    </test>

     <test name="Retrieve Collection of Venues By Org">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Get_Venues_By_Org"/>
                </methods>
            </class>
        </classes>
    </test>

    <!--<test name="Retrieve Collection of Venues By Invalid Org TODO:Not working">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Get_Venues_By_InvalidOrg"/>
                </methods>
            </class>
        </classes>
    </test>-->

    <test name="5->Create Venue">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Create_Venue"/>
                </methods>
            </class>
        </classes>
    </test>



    <test name="6->Update Venue">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Update_Venue"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="7->Update Venue with invalid ID">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Update_Venue_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="8->Delete Venue ">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Delete_Venue"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="9->Delete Venue with Invalid Id ">
        <classes>
            <class name="com.org.map.sp.api.tests.Venue">
                <methods>
                    <include name="verify_Delete_Venue_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

   <test name="1->Create Campus">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Create_Campus"/>
                </methods>
            </class>
        </classes>
    </test>
    <test name="2->Create Campus without venue id ">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Create_Campus_WithoutVenueId"/>
                </methods>
            </class>
        </classes>
    </test>


    <test name="4->Get Campus">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Get_Campus"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="5->Get Campus by invalid id">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Get_Campus_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <!--<test name="6->Get collection of Campuses by Venue id TODO:NOT WORKING">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Get_Campuses_ByVenueId"/>
                </methods>
            </class>
        </classes>
    </test>-->

   <test name="7->Verify Update Campus">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Update_Campus"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="8->Verify Update Campus by InvalidID">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Update_Campus_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="9->Delete Campus ">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Delete_Campus"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="10->Delete Campus with Invalid Id ">
        <classes>
            <class name="com.org.map.sp.api.tests.Campus">
                <methods>
                    <include name="verify_Delete_Campus_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="1->Create Building">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Create_Building"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="2->Create Building without campus id ">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Create_Building_WithoutCampusId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="3->Create Building without venue id">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Create_Building_WithoutVenueId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="4->Get Building">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Get_Building"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="5->Get Building by Invalid ID">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Get_Building_ByInvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <!--<test name="6->Retrieve Collection of Buildings By Invalid Org TODO:Not working">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Get_Buildings_By_CampusId"/>
                </methods>
            </class>
        </classes>
    </test>-->
    <test name="7->Verify Update Building">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Update_Building"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="8->Verify Update Building by InvalidID">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Update_Building_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="9->Verify Update Building by InvalidCampusID">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Update_Building_InvalidCampusId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="10->Delete Building ">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Delete_Building"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="11->Delete Building with Invalid Id ">
        <classes>
            <class name="com.org.map.sp.api.tests.Building">
                <methods>
                    <include name="verify_Delete_Building_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test> 


    <test name="1->Create Floor">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Create_Floor"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="2->Create Floor Invalid Venue Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Create_Floor_InvalidVenueId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="3->Create Floor Invalid  Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Create_Floor_InvalidBuildingId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="4->Get Floor">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Get_Floor"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="5->Get Floor By Invalid Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Get_Floor_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <!--<test name="6->Get Floors By Building Id Todo:Not Working">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Get_Floors_By_BuildingId"/>
                </methods>
            </class>
        </classes>
    </test>-->

    <test name="7->Update Floor">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Update_Floor"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="8->Update Floor by Invalid Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Update_Floor_By_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="9->Delete Floor">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Delete_Floor"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="10->Delete Floor by Invalid Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Floor">
                <methods>
                    <include name="verify_Delete_Floor_By_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>


    <test name="1->Create Resource">
        <classes>
            <class name="com.org.map.sp.api.tests.Resource">
                <methods>
                    <include name="verify_Create_Resource"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="2->Create Resource Invalid Floor Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Resource">
                <methods>
                    <include name="verify_Create_Resource_InvalidFloorId"/>
                </methods>
            </class>
        </classes>
    </test>

        <test name="3->Get Resource">
            <classes>
                <class name="com.org.map.sp.api.tests.Resource">
                    <methods>
                        <include name="verify_Get_Resource"/>
                    </methods>
                </class>
            </classes>
        </test>

        <test name="4->Get Resource By Invalid Id">
            <classes>
                <class name="com.org.map.sp.api.tests.Resource">
                    <methods>
                        <include name="verify_Get_Resource_InvalidId"/>
                    </methods>
                </class>
            </classes>
        </test>

           <!--<test name="6->Get Resources By Floor Id Todo:Not Working">
               <classes>
                   <class name="com.org.map.sp.api.tests.Resource">
                       <methods>
                           <include name="verify_Get_Resources_By_FloorId"/>
                       </methods>
                   </class>
               </classes>
           </test>-->

         <test name="7->Update Resource">
               <classes>
                   <class name="com.org.map.sp.api.tests.Resource">
                       <methods>
                           <include name="verify_Update_Resource"/>
                       </methods>
                   </class>
               </classes>
           </test>

           <test name="8->Update Resource by Invalid Id">
               <classes>
                   <class name="com.org.map.sp.api.tests.Resource">
                       <methods>
                           <include name="verify_Update_Resource_By_InvalidId"/>
                       </methods>
                   </class>
               </classes>
           </test>

           <test name="9->Delete Resource">
               <classes>
                   <class name="com.org.map.sp.api.tests.Resource">
                       <methods>
                           <include name="verify_Delete_Resource"/>
                       </methods>
                   </class>
               </classes>
           </test>

           <test name="10->Delete Resource by Invalid Id">
               <classes>
                   <class name="com.org.map.sp.api.tests.Resource">
                       <methods>
                           <include name="verify_Delete_Resource_By_InvalidId"/>
                       </methods>
                   </class>
               </classes>
           </test>

    <test name="1->Create Point">
        <classes>
            <class name="com.org.map.sp.api.tests.Point">
                <methods>
                    <include name="verify_Create_Point"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="2->Create Point Invalid Floor Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Point">
                <methods>
                    <include name="verify_Create_Point_InvalidFloorId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="3->Create Point Invalid Building Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Point">
                <methods>
                    <include name="verify_Create_Point_InvalidBuildingId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="4->Get Point">
        <classes>
            <class name="com.org.map.sp.api.tests.Point">
                <methods>
                    <include name="verify_Get_Point"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="5->Get Point By Invalid Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Point">
                <methods>
                    <include name="verify_Get_Point_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

        <!--<test name="6->Get Points By Resource Id Todo:Not Working">
            <classes>
                <class name="com.org.map.sp.api.tests.Point">
                    <methods>
                        <include name="verify_Get_Points_By_FloorId"/>
                    </methods>
                </class>
            </classes>
        </test>-->

        <test name="7->Update Point">
            <classes>
                <class name="com.org.map.sp.api.tests.Point">
                    <methods>
                        <include name="verify_Update_Point"/>
                    </methods>
                </class>
            </classes>
        </test>

        <test name="8->Update Point by Invalid Id">
            <classes>
                <class name="com.org.map.sp.api.tests.Point">
                    <methods>
                        <include name="verify_Update_Point_By_InvalidId"/>
                    </methods>
                </class>
            </classes>
        </test>

        <test name="9->Delete Point">
            <classes>
                <class name="com.org.map.sp.api.tests.Point">
                    <methods>
                        <include name="verify_Delete_Point"/>
                    </methods>
                </class>
            </classes>
        </test>

        <test name="10->Delete Point by Invalid Id">
            <classes>
                <class name="com.org.map.sp.api.tests.Point">
                    <methods>
                        <include name="verify_Delete_Point_By_InvalidId"/>
                    </methods>
                </class>
            </classes>
        </test>


    <test name="1->Get PoiType">
        <classes>
            <class name="com.org.map.sp.api.tests.PoiType">
                <methods>
                    <include name="verify_Get_PoiType"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="2->Get PoiType By Invalid Id">
        <classes>
            <class name="com.org.map.sp.api.tests.PoiType">
                <methods>
                    <include name="verify_Get_PoiType_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <!--<test name="3->Get PoiType By Value Todo:Not working">
        <classes>
            <class name="com.org.map.sp.api.tests.PoiType">
                <methods>
                    <include name="verify_Get_PoiType_ByValue"/>
                </methods>
            </class>
        </classes>
    </test>-->

    <test name="1->Create Route">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Create_Route"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="2->Create Route Invalid Start and End Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Create_Route_InvalidStartAndEndId"/>
                </methods>
            </class>
        </classes>
    </test>


    <test name="4->Get Route">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Get_Route"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="5->Get Route By Invalid Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Get_Route_ByInvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <!--<test name="6->Get Routes By Resource Id Todo:Not Working">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Get_Routes_By_FloorId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="7->Get Location Routes Todo:Not Working">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Get_Location_Routes"/>
                </methods>
            </class>
        </classes>
    </test>-->
    
    <test name="8->Update Route">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Update_Route"/>
                </methods>
            </class>
        </classes>
    </test>
    
    <test name="9->Update Route by Invalid Id">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Update_Route_By_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="10->Update Building's Route ">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Update_BuildingRoute"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="11 ->Update Building's Route when Invalid Id ">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Update_BuildingRoute_ByInvalidId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="12 ->Reset Route">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Reset_Route"/>
                </methods>
            </class>
        </classes>
    </test>

   <!-- <test name="13->Delete Route Todo:Not Working">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Delete_Route"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="14->Delete Route by Invalid Id Todo:Not Working">
        <classes>
            <class name="com.org.map.sp.api.tests.Route">
                <methods>
                    <include name="verify_Delete_Route_By_InvalidId"/>
                </methods>
            </class>
        </classes>
    </test>-->

    <test name="1->Create Segment">
        <classes>
            <class name="com.org.map.sp.api.tests.Segment">
                <methods>
                    <include name="verify_Create_Segment"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="2->Create Segment with invalid floor id ">
        <classes>
            <class name="com.org.map.sp.api.tests.Segment">
                <methods>
                    <include name="verify_Create_Segment_WithInvalidFloorId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="3->Create Segment with invalid start point">
        <classes>
            <class name="com.org.map.sp.api.tests.Segment">
                <methods>
                    <include name="verify_Create_Segment_WithInvalidStartId"/>
                </methods>
            </class>
        </classes>
    </test>

    <test name="4->Create Segment with invalid end point">
        <classes>
            <class name="com.org.map.sp.api.tests.Segment">
                <methods>
                    <include name="verify_Create_Segment_WithInvalidEndId"/>
                </methods>
            </class>
        </classes>
    </test>

   <test name="5->Get Segment">
       <classes>
           <class name="com.org.map.sp.api.tests.Segment">
               <methods>
                   <include name="verify_Get_Segment"/>
               </methods>
           </class>
       </classes>
   </test>

   <test name="6->Get Segment by Invalid ID">
       <classes>
           <class name="com.org.map.sp.api.tests.Segment">
               <methods>
                   <include name="verify_Get_Segment_ByInvalidId"/>
               </methods>
           </class>
       </classes>
   </test>

  <!-- <test name="7->Retrieve Collection of Segments By Invalid Org TODO:Not working">
       <classes>
           <class name="com.org.map.sp.api.tests.Segment">
               <methods>
                   <include name="verify_Get_Segments_By_FloorId"/>
               </methods>
           </class>
       </classes>
   </test>-->

   <test name="8->Verify Update Segment">
       <classes>
           <class name="com.org.map.sp.api.tests.Segment">
               <methods>
                   <include name="verify_Update_Segment"/>
               </methods>
           </class>
       </classes>
   </test>

   <test name="9->Verify Update Segment by InvalidID">
       <classes>
           <class name="com.org.map.sp.api.tests.Segment">
               <methods>
                   <include name="verify_Update_Segment_InvalidId"/>
               </methods>
           </class>
       </classes>
   </test>

   <test name="10->Verify Update Segment by InvalidFloorID">
       <classes>
           <class name="com.org.map.sp.api.tests.Segment">
               <methods>
                   <include name="verify_Update_Segment_InvalidFloorId"/>
               </methods>
           </class>
       </classes>
   </test>

   <test name="11->Delete Segment ">
       <classes>
           <class name="com.org.map.sp.api.tests.Segment">
               <methods>
                   <include name="verify_Delete_Segment"/>
               </methods>
           </class>
       </classes>
   </test>

   <test name="12->Delete Segment with Invalid Id ">
       <classes>
           <class name="com.org.map.sp.api.tests.Segment">
               <methods>
                   <include name="verify_Delete_Segment_InvalidId"/>
               </methods>
           </class>
       </classes>
   </test>





</suite>