group 'MAAS_API_Automation'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    maven {
        url "http://repo1.maven.org/maven2"
    }
}

dependencies {
    testCompile 'io.rest-assured:rest-assured:3.2.0'
    testCompile 'io.rest-assured:json-schema-validator:3.0.0'
    compile 'io.rest-assured:json-path:3.0.0'
    compile 'javax.ws.rs:javax.ws.rs-api:2.1'
    compile group: 'org.json', name: 'json', version: '20160810'
    compile group: 'org.testng', name: 'testng', version: '6.9.10'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile 'commons-codec:commons-codec:1.10'
    compile 'io.jsonwebtoken:jjwt-api:0.10.5'
    compile 'io.jsonwebtoken:jjwt-impl:0.10.5'
    compile 'io.jsonwebtoken:jjwt-jackson:0.10.5'
    testCompile group: 'junit', name: 'junit', version: '4.11'

}


task runCoreSTAGE(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/Core-STAGE.xml'
    }
}

task runCorePROD(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/Core-PROD.xml'
    }
}


task runMeSTAGE(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/Me-STAGE.xml'

    }
}

task runMePROD(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/Me-PROD.xml'
    }
}

task runMapJwtSTAGE(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/Map-JWT-STAGE.xml'

    }
}

task runMapSPSTAGE(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/Map-SP-STAGE.xml'

    }
}

task runCMEDignityHealthStage(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/CmeV2-DignityHealth-STAGE.xml'
    }
}

task runCMEDirectoryStage(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/CmeV2-Directory-STAGE.xml'

    }
}

task runCMEAPIAutomationPROD(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/CmeV2-DignityHealth-PROD.xml'
        suites '/src/test/resources/XMLs/CmeV2-Directory-PROD.xml'

    }
}

task runCMEAPIAutomationSTAGE(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        outputs.upToDateWhen { false }
        ignoreFailures = true
        suites '/src/test/resources/XMLs/CmeV2-DignityHealth-STAGE.xml'
        suites '/src/test/resources/XMLs/CmeV2-Directory-STAGE.xml'

    }
}